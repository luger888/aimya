<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark SkinnableContainer container.  

     @see spark.components.SkinnableContainer
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.SkinnableContainer")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                // Push backgroundColor and backgroundAlpha directly.
                // Handle undefined backgroundColor by hiding the background object.
                /*if (isNaN(getStyle("backgroundColor"))))
                {
                    background.visible = false;
                }
                else
                {
                    background.visible = true;
                    bgFill.color = getStyle("backgroundColor");
                    bgFill.alpha = getStyle("backgroundAlpha");
					borderStroke
                }*/
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
        ]]>        
    </fx:Script>
    
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
    </s:states>
    
    <!--- Defines the appearance of the SkinnableContainer class's background. -->
	<!--s:RectangularDropShadow id="dropShadow" blurX="10" blurY="10"
							 alpha="0.21" distance="0"  blRadius="6"
							 angle="120" color="#000101" blendMode="multiply"
							 left="0" top="0" right="0" bottom="0" /-->
	
	
	<s:Rect left="0" right="0" top="0" bottom="0" >
		<s:fill>
			<s:SolidColor color="0xFFFFFF" alpha="1"/>
		</s:fill>
		<s:filters>
			<s:DropShadowFilter alpha="0.21" distance="0" blurX="10" blurY="10" angle="120"
								color="#000101"  knockout="true" />
		</s:filters>
	</s:Rect>
	<s:Rect id="rectBG"
			left="0" right="0" top="0" bottom="0" >
		<s:fill>
			<s:SolidColor color="0xFFFFFF" alpha="1"/>
		</s:fill>
	</s:Rect>

    <s:Rect id="background" left="5" right="5" top="5" bottom="5" >
		<s:stroke>
			<s:SolidColorStroke id="borderStroke" color="#B6B5B5" weight="1">
				
			</s:SolidColorStroke>
		</s:stroke>
        <s:fill>
            <!--- @private -->
            <s:SolidColor id="bgFill" color="#F2F1F1"/>
        </s:fill>
    </s:Rect>
    
    <!--
        Note: setting the minimum size to 0 here so that changes to the host component's
        size will not be thwarted by this skin part's minimum size.   This is a compromise,
        more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
    -->
    <!--- @copy spark.components.SkinnableContainer#contentGroup -->
    <s:Group id="contentGroup" left="5" right="5" top="5" bottom="5" minWidth="0" minHeight="0">
        <s:layout>
            <s:VerticalLayout/>
        </s:layout>
    </s:Group>

</s:Skin>
